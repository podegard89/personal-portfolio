---
import Layout from '../layouts/Layout.astro';
import Card from '../components/Card.astro';
import { Image } from 'astro:assets';
import localHeadshotImage from '../images/headshot.jpg';

const allNavItems = await Astro.glob('../content/nav-items/*.md');
---

<Layout title="Pearce Odegard">
		<h1><span class="text-gradient">Pearce Odegard</span></h1>
		<div class="image-text">
			<Image class="headshot" src={localHeadshotImage} alt="Pearce Odegard" />
			<h2>Freelance Developer and Tech Instructor</h3>
			<div class="description">
				<p>
					Hi, I'm Pearce! I specialize in full-stack web development using a variety of technologies built around <em>Node</em> and <em>TypeScript</em>.
				</p>
				<p>
					I also have a passion for teaching, having instructed remote web development courses in <em>JavaScript</em>, <em>Java</em>, and
					<em>C#</em> at <a href="https://www.launchcode.org/">LaunchCode</a>.
				</p>
				<p>
					Explore the items below to dive deeper into my portfolio:
				</p>
			</div>
			<div role="list" class="link-card-flex">
			{
				allNavItems.map((item) => (
					<Card 
					href={item.frontmatter.href} 
					title={item.frontmatter.title} 
					body={item.compiledContent()} 
					/>))
			}
			</div>
		</div>

		
</Layout>

<style>

	
	h1 {
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		font-family: 'VulfMonoBlackDemo', sans-serif;
	}
	.headshot {
		display: flex;
		padding: .5rem;
		height: auto;
		border-radius: 50%;
		max-width: 100%;
		float: left;
		/* Still not convinced on whether I want the text to follow the circle shape of the image or just be next to it
		leaning toward just next it without this circle() rule */
		/* shape-outside: circle(); */
		margin: 20px;
	}
	h2 {
		font-size: 2rem;
		font-weight: bold;
		line-height: 1;
		font-family: 'VulfSansDemo', sans-serif;
	}
	.image-text {
		position: relative;
  		width: fit-content;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.description {
		font-family: 'VulfSansDemo', sans-serif;
		flex-grow: 1;
		font-size: 1.5rem;
	}
	.description > p > a {
		text-decoration: none;
		color: #333;
		position: relative; /* Needed for the underline animation */
		border-bottom: 2px solid transparent; /* Transparent border by default */
		transition: color 0.3s, border-color 0.3s; /* Add smooth transitions */
	}

	.description > p > a:hover {
		color: #ffa500; /* Change the link color on hover */
		border-color: #ffa500; /* Change border color on hover */
	}
	.description code {
		font-size: 0.8em;
		font-weight: bold;
		background: rgba(var(--accent-light), 12%);
		color: rgb(var(--accent-light));
		border-radius: 4px;
		padding: 0.3em 0.4em;
	}
	.instructions strong {
		color: rgb(var(--accent-light));
	}
	.link-card-flex {
		display: flex;
		gap: 2rem;
		padding: 0;
		flex-wrap: wrap;
	}
	@media (max-width: 768px) {
	.link-card-flex {
		flex-wrap: wrap; /* Enable wrapping on smaller screens */
		justify-content: center; /* Center-align the wrapped items */
	}
}
</style>
