---
import type { MarkdownInstance } from "astro";

interface Props {
  jobEntry: MarkdownInstance<Record<string, any>>;
}

const { jobEntry } = Astro.props;
const { title, employer, startDate, endDate } = jobEntry.frontmatter;
---

<div class="job-entry" id={title.replace(/\s/g, "")}>
  <div class="heading-container">
    <div class="sub-heading-container">
      <h2 class="heading-label">Role</h2>
      <h2 id="role" class="heading-content">
        {title}
      </h2>
    </div>
    <div class="sub-heading-container">
      <h2 class="heading-label">Employer</h2>
      <h2 id="employer" class="heading-content">
        {employer}
      </h2>
    </div>
    <div class="sub-heading-container">
      <h2 class="heading-label">Duration</h2>
      <h2 id="date-range" class="heading-content">
        {startDate + " - " + endDate}
      </h2>
    </div>
  </div>
  <div class="blog-preview">
    <Fragment class="job-description" set:html={jobEntry.compiledContent()} />
  </div>
  <div class="link-container">
    <a href="/placeholder" class="read-more-link"> Continue reading &#8594;</a>
  </div>
</div>

<style>
  :root {
    --header-font-size: clamp(1.3rem, 2vw, 2rem);
    --preview-font-size: clamp(1rem, 1vw, 1.5rem);
  }

  h2 {
    font-size: var(--header-font-size);
    text-align: left;
  }

  .heading-container {
    display: flex;
    flex-direction: row;
    justify-content: space-evenly;
    align-items: center;
    gap: 1rem;
  }

  .sub-heading-container {
    display: flex;
    flex-direction: column;
    gap: 0;
  }
  .heading-label {
    margin-bottom: 0;
    font-style: italic;
  }
  .heading-content {
    margin-top: 0.5rem;
    margin-bottom: 0;
  }

  .blog-preview {
    font-size: var(--preview-font-size);
    display: -webkit-box;
    -webkit-line-clamp: 5; /* subject to change */
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .read-more-link {
    text-decoration: none;
    margin-top: 1rem;
    background-color: rgb(var(--accent-light));
    border-radius: 2rem;
    padding: 15px;
    font-weight: bold;
    transition: all 0.1s ease-in-out;
    font: inherit;
    font-style: italic;
    color: inherit;
    font-size: var(--preview-font-size);

    box-shadow:
      rgba(50, 50, 93, 0.25) 0px 2px 5px -1px,
      rgba(0, 0, 0, 0.3) 0px 1px 3px -1px;
  }

  .read-more-link:hover {
    background-color: rgb(var(--accent-light));
    transform: scale(1.02);
    box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;
  }

  .link-container {
    display: flex;
    justify-content: center;
    align-items: center;
  }

  #role {
    background-color: rgb(var(--accent));
    padding: 1rem;
  }
  #employer {
    background-color: RGB(211.5, 113.5, 57);

    padding: 1rem;
  }

  #date-range {
    background-color: rgb(var(--accent-light));
    padding: 1rem;
  }

  .job-entry {
    border: 6px solid;
    border-image: var(--accent-gradient);
    border-image-slice: 1;
    border-radius: 20px;
    background-origin: border-box;
    background-clip: content-box, border-box;
    padding: 1rem;
    padding-top: 0;
    box-shadow: rgb(38, 57, 77) 0px 20px 30px -10px;
  }
  .job-description {
    font-family: "VulfSansDemo", sans-serif;
  }

  @media (max-width: 900px) {
    .heading-container {
      flex-direction: column;
      gap: 0;
      justify-content: flex-start;
      align-items: flex-start;
    }

    .read-more-link {
      padding: 10px;
    }

    .blog-preview {
      -webkit-line-clamp: 8;
    }
  }
</style>
