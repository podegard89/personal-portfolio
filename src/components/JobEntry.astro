---
import type { MarkdownInstance } from "astro";

interface Props {
  jobEntry: MarkdownInstance<Record<string, any>>;
}

const { jobEntry } = Astro.props;
const { title, employer, startDate, endDate } = jobEntry.frontmatter;
---

<div class="job-entry">
  <div class="heading-container">
    <div class="sub-heading-container">
      <h2 class="heading-label">Role</h2>
      <h2 id="role" class="heading-content">
        {title}
      </h2>
    </div>
    <div class="sub-heading-container">
      <h2 class="heading-label">Employer</h2>
      <p id="employer" class="heading-content">
        {employer}
      </p>
    </div>
    <div class="sub-heading-container">
      <h2 class="heading-label">Duration</h2>
      <p id="date-range" class="heading-content">
        {startDate + " - " + endDate}
      </p>
    </div>
  </div>
  <Fragment class="job-description" set:html={jobEntry.compiledContent()} />
</div>

<style>
  .heading-container {
    display: flex;
    flex-direction: row;
    justify-content: center;
    gap: 1em;
    align-items: center;
  }
  .sub-heading-container {
    display: flex;
    flex-direction: column;
    justify-content: center;
    gap: 0;
    align-items: center;
  }
  .heading-label {
    text-align: left;
    margin-bottom: 0;
  }
  .heading-content {
    text-align: left;
    margin-top: 0.5rem;
    margin-bottom: 0;
  }
  #role {
    background-color: rgb(var(--accent));
    padding: 1rem;
  }
  #employer {
    background-color: RGB(211.5, 113.5, 57);

    padding: 1rem;
  }

  #date-range {
    background-color: rgb(var(--accent-light));
    padding: 1rem;
  }

  .job-entry {
    border: 6px solid;
    border-image: var(--accent-gradient);
    border-image-slice: 1;
    border-radius: 20px;
    background-origin: border-box;
    background-clip: content-box, border-box;
    padding: 1rem;
    box-shadow: rgb(38, 57, 77) 0px 20px 30px -10px;
  }
  .job-description {
    font-family: "VulfSansDemo", sans-serif;
  }
  :global(p > a) {
    text-decoration: none;
    color: #333;
    position: relative; /* Needed for the underline animation */
    border-bottom: 2px solid transparent; /* Transparent border by default */
    transition:
      color 0.3s,
      border-color 0.3s; /* Add smooth transitions */
    font-weight: bold;
  }
  :global(p > a:hover) {
    color: rgb(var(--accent));
    border-bottom-color: rgb(var(--accent));
  }
</style>
